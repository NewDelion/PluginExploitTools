using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Net;

namespace MCPEQuery
{
    class Program
    {
        static void Main(string[] args)
        {
            while (true)
            {
                var result = new PMMPLIB.MCPEQuery(ReadServerAddress(), new Random(Environment.TickCount).Next(54312)).Query();
                foreach (var item in result)
                {
                    if (item.Value is IEnumerable<string>)
                    {
                        Console.WriteLine("{0}: ", item.Key);
                        foreach (var item0 in (IEnumerable<string>)item.Value)
                            Console.WriteLine("- {0}", item0);
                    }
                    else
                        Console.WriteLine("{0}: {1}", item.Key, (string)item.Value);
                }

                Console.ReadKey(true);
            }
        }

        static IPEndPoint ReadServerAddress()
        {
            IPAddress addr = null;
            int port;
            while (true)
            {
                Console.Clear();
                Console.Write("Server IP   : ");
                if (IPAddress.TryParse(Console.ReadLine(), out addr))
                    break;
                Console.WriteLine("[ERROR] IPアドレスを正しく入力してください\n");
                Console.ReadKey(true);
            }

            while (true)
            {
                Console.Clear();
                Console.WriteLine("Server IP   : {0}", addr.ToString());
                Console.Write("Server Port : ");
                if (int.TryParse(Console.ReadLine(), out port) && port >= 0)
                    break;
                Console.WriteLine("[ERROR] ポートを正しく入力してください");
                Console.ReadKey(true);
            }

            Console.WriteLine();

            return new IPEndPoint(addr, port);
        }
    }
}
