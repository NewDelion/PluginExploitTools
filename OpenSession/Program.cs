using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Net;
using System.Net.Sockets;
using PMMPLIB.RakLib.protocol;
using PMMPLIB.Utils.Linq;

namespace OpenSession
{
    class Program
    {
        static void send(UdpClient client, IPEndPoint target, byte[] payload)
        {
            payload.HexDump("Send: ");
            client.Send(payload, payload.Length, target);
        }

        static void Main(string[] args)
        {
            var server = ReadServerAddress();
            var raklib_client_id = (long)new Random(Environment.TickCount).Next(10000);
            IPEndPoint remote = null;
            using (var client = new UdpClient(19132))
            {
                using (var ms = new MemoryStream())
                {
                    new OpenConnectionRequest1() { MtuSize = 1465 }.Encode(ms);
                    send(client, server, ms.ToArray());
                    client.Receive(ref remote).HexDump("Receive: ");
                }
                using (var ms = new MemoryStream())
                {
                    new OpenConnectionRequest2()
                    {
                        ServerAddress = server,
                        MtuSize = 1465,
                        ClientId = raklib_client_id
                    }.Encode(ms);
                    send(client, server, ms.ToArray());
                    client.Receive(ref remote).HexDump("Receive: ");
                }
            }

            Console.WriteLine();//for debug point
        }

        static IPEndPoint ReadServerAddress()
        {
            IPAddress addr = null;
            int port;
            while (true)
            {
                Console.Clear();
                Console.Write("Server IP   : ");
                if (IPAddress.TryParse(Console.ReadLine(), out addr))
                    break;
                Console.WriteLine("[ERROR] IPアドレスを正しく入力してください\n");
                Console.ReadKey(true);
            }

            while (true)
            {
                Console.Clear();
                Console.WriteLine("Server IP   : {0}", addr.ToString());
                Console.Write("Server Port : ");
                if (int.TryParse(Console.ReadLine(), out port) && port >= 0)
                    break;
                Console.WriteLine("[ERROR] ポートを正しく入力してください");
                Console.ReadKey(true);
            }

            Console.WriteLine();

            return new IPEndPoint(addr, port);
        }
    }
}
