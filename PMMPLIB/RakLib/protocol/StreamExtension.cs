using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace PMMPLIB.RakLib.protocol
{
    public static class StreamExtension
    {
        public static void Write(this MemoryStream ms, byte[] buffer)
        {
            ms.Write(buffer, 0, buffer.Length);
        }

        public static void WriteInt16(this MemoryStream ms, short target)
        {
            ms.Write(BitConverter.GetBytes(target), 0, 2);
        }

        public static void WriteInt16BE(this MemoryStream ms, short target)
        {
            ms.Write(BitConverter.GetBytes(target).Reverse().ToArray(), 0, 2);
        }

        public static void WriteInt24(this MemoryStream ms, int target)
        {
            ms.Write(BitConverter.GetBytes(target), 0, 3);
        }

        public static void WriteInt24BE(this MemoryStream ms, int target)
        {
            ms.Write(BitConverter.GetBytes(target).Take(3).Reverse().ToArray(), 0, 3);
        }

        public static void WriteInt32(this MemoryStream ms, int target)
        {
            ms.Write(BitConverter.GetBytes(target), 0, 4);
        }

        public static void WriteInt32BE(this MemoryStream ms, int target)
        {
            ms.Write(BitConverter.GetBytes(target).Reverse().ToArray(), 0, 4);
        }

        public static void WriteInt64(this MemoryStream ms, long target)
        {
            ms.Write(BitConverter.GetBytes(target), 0, 8);
        }

        public static void WriteInt64BE(this MemoryStream ms, long target)
        {
            ms.Write(BitConverter.GetBytes(target).Reverse().ToArray(), 0, 8);
        }

        public static void WriteAddress(this MemoryStream ms, System.Net.IPEndPoint address)
        {
            if (address.AddressFamily == System.Net.Sockets.AddressFamily.InterNetwork)
            {
                ms.WriteByte(0x04);
                ms.WriteInt32(unchecked((int)~address.Address.Address));
                ms.WriteInt24BE(address.Port);
            }
            else
            {
                //TODO: IPv6
            }
        }

        public static void WriteString(this MemoryStream ms, string target)
        {
            ms.WriteInt32BE(target.Length);
            ms.Write(Encoding.UTF8.GetBytes(target));
        }
    }
}
